{
	"info": {
		"_postman_id": "9bd89ee6-3996-413c-b822-0f4f650648aa",
		"name": "HW_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "/first code 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "162.55.220.72:5005/first",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "/user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = pm.response.json();\r",
							"console.log(\"json=\",jsonData);\r",
							"//парсим респонс и проверяем значение\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//проверяем статус код 200\r",
							"\r",
							"pm.test(\"Check name = Dan\", function (){\r",
							"    pm.expect(jsonData.name).to.eql(\"Dan\")\r",
							"});\r",
							"//проверяем значение ключа name\r",
							"\r",
							"pm.test(\"Check age = 30\", function(){\r",
							"    pm.expect(jsonData.age).to.eql(\"30\")\r",
							"});\r",
							"//проверяем значение ключа age\r",
							"\r",
							"pm.test(\"Check salary = 700\", function(){\r",
							"    pm.expect(jsonData.salary).to.eql(700)\r",
							"});\r",
							"//проверяем значение ключа salary\r",
							"\r",
							"let req = request.data;\r",
							"console.log(\"reqest=\",req);\r",
							"//парсим реквест и выводим результат в консоль для проверки\r",
							"\r",
							"pm.test(\"Name reqest = name response\", function(){\r",
							"    pm.expect(jsonData.name).to.eql(req.name);\r",
							"});\r",
							"//Сверяем значения ключа name в request и response\r",
							"\r",
							"pm.test(\"Age request = age response\", function (){\r",
							"    pm.expect(jsonData.age).to.eql(req.age);\r",
							"});\r",
							"//Сверяем значения ключа age в reqest и response\r",
							"\r",
							"//pm.test(\"Salary request = salary response\", function() {\r",
							"//    pm.expect(jsonData.salary).to.eql(req.salary);\r",
							"//});\r",
							"//сверяем значение ключа salary reqest response, видим ошибку \"ожидается число, приходит строка\"\r",
							"\r",
							"let sal = +req.salary;\r",
							"console.log(typeof(sal));\r",
							"//переводим значение sal из string в int и выводим тип в консоль для проверки\r",
							"\r",
							"pm.test(\"Salary reqest = salary response\", function() {\r",
							"    pm.expect(jsonData.salary).to.eql(sal);\r",
							"});\r",
							"//сверяем значение ключа salary в reqest и response\r",
							"\r",
							"console.log(jsonData.family);\r",
							"//выводим в консоль параметр family из response\r",
							"\r",
							"let sal1_5 = jsonData.family.u_salary_1_5_year;\r",
							"console.log(sal1_5);\r",
							"//вводим переменную и присваиваем ей значение из ключа u_salary_1_5_year\r",
							"\r",
							"pm.test(\"Salary 1.5 = u_salary_1_5_year\",function() {\r",
							"    pm.expect(sal*4).to.eql(sal1_5);\r",
							"});\r",
							"//проверяем что salary*4 = u_salary_1_5_year"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Dan",
							"type": "text"
						},
						{
							"key": "age",
							"value": "30",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "700",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "/object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code 200\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//Проверка статус кода 200\r",
							"\r",
							"let res = pm.response.json();\r",
							"console.log(res);\r",
							"//парсим response\r",
							"\r",
							"let req = pm.request.url.query.toObject();\r",
							"console.log(req);\r",
							"//парсим request из url\r",
							"\r",
							"pm.test(\"name response = name request\", function(){\r",
							"    pm.expect(res.name).to.eql(req.name);\r",
							"})\r",
							"//сверяем ключ name в ответе и запросе\r",
							"\r",
							"pm.test(\"age response = age request\", function(){\r",
							"    pm.expect(res.age).to.eql(req.age);\r",
							"});\r",
							"//сверяем ключ age в ответе и запросе\r",
							"let reqS = +req.salary\r",
							"pm.test(\"salary response = salary request\", function(){\r",
							"    pm.expect(res.salary).to.eql(reqS);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Dan&age=30&salary=700",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Dan"
						},
						{
							"key": "age",
							"value": "30"
						},
						{
							"key": "salary",
							"value": "700"
						}
					]
				}
			},
			"response": []
		}
	]
}