{
	"info": {
		"_postman_id": "9bd89ee6-3996-413c-b822-0f4f650648aa",
		"name": "HW_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "/first code 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "162.55.220.72:5005/first",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "/user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = pm.response.json();\r",
							"console.log(\"json =\",jsonData);\r",
							"//парсим респонс и проверяем значение\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//проверяем статус код 200\r",
							"\r",
							"pm.test(\"Check name = Dan\", function (){\r",
							"    pm.expect(jsonData.name).to.eql(\"Dan\")\r",
							"});\r",
							"//проверяем значение ключа name\r",
							"\r",
							"pm.test(\"Check age = 30\", function(){\r",
							"    pm.expect(jsonData.age).to.eql(\"30\")\r",
							"});\r",
							"//проверяем значение ключа age\r",
							"\r",
							"pm.test(\"Check salary = 700\", function(){\r",
							"    pm.expect(jsonData.salary).to.eql(700)\r",
							"});\r",
							"//проверяем значение ключа salary\r",
							"\r",
							"let req = request.data;\r",
							"console.log(\"reqest =\",req);\r",
							"//парсим реквест и выводим результат в консоль для проверки\r",
							"\r",
							"pm.test(\"Name reqest = name response\", function(){\r",
							"    pm.expect(jsonData.name).to.eql(req.name);\r",
							"});\r",
							"//Сверяем значения ключа name в request и response\r",
							"\r",
							"pm.test(\"Age request = age response\", function (){\r",
							"    pm.expect(jsonData.age).to.eql(req.age);\r",
							"});\r",
							"//Сверяем значения ключа age в reqest и response\r",
							"\r",
							"//pm.test(\"Salary request = salary response\", function() {\r",
							"//    pm.expect(jsonData.salary).to.eql(req.salary);\r",
							"//});\r",
							"//сверяем значение ключа salary reqest response, видим ошибку \"ожидается число, приходит строка\"\r",
							"\r",
							"let sal = +req.salary;\r",
							"console.log(\"type =\",typeof(sal));\r",
							"//переводим значение sal из string в int и выводим тип в консоль для проверки\r",
							"\r",
							"pm.test(\"Salary reqest = salary response\", function() {\r",
							"    pm.expect(jsonData.salary).to.eql(sal);\r",
							"});\r",
							"//сверяем значение ключа salary в reqest и response\r",
							"\r",
							"console.log(\"family =\",jsonData.family);\r",
							"//выводим в консоль параметр family из response\r",
							"\r",
							"let sal1_5 = jsonData.family.u_salary_1_5_year;\r",
							"console.log(sal1_5);\r",
							"//вводим переменную и присваиваем ей значение из ключа u_salary_1_5_year\r",
							"\r",
							"pm.test(\"Salary 1.5 = u_salary_1_5_year\",function() {\r",
							"    pm.expect(sal*4).to.eql(sal1_5);\r",
							"});\r",
							"//проверяем что salary*4 = u_salary_1_5_year"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Dan",
							"type": "text"
						},
						{
							"key": "age",
							"value": "30",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "700",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "/object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code 200\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//Проверка статус кода 200\r",
							"\r",
							"let res = pm.response.json();\r",
							"console.log(\"response=\",res);\r",
							"//парсим response\r",
							"\r",
							"let req = pm.request.url.query.toObject();\r",
							"console.log(\"request=\",req);\r",
							"//парсим request из url\r",
							"\r",
							"pm.test(\"name response = name request\", function(){\r",
							"    pm.expect(res.name).to.eql(req.name);\r",
							"})\r",
							"//сверяем значение ключа name в ответе и запросе\r",
							"\r",
							"pm.test(\"age response = age request\", function(){\r",
							"    pm.expect(res.age).to.eql(req.age);\r",
							"});\r",
							"//сверяем значение ключа age в ответе и запросе\r",
							"let reqS = +req.salary\r",
							"pm.test(\"salary response = salary request\", function(){\r",
							"    pm.expect(res.salary).to.eql(reqS);\r",
							"})\r",
							"//Переводим salary из str в int и сверяем значение salary в ответе и запросе\r",
							"\r",
							"let fam = res.family;\r",
							"console.log(\"family=\",fam);\r",
							"//выводим значение ключа family в консоль\r",
							"\r",
							"pm.test(\"parameter dog have name\", function(){\r",
							"    pm.expect(fam.pets.dog).to.have.any.keys(\"name\");\r",
							"});\r",
							"//Проверить, что у параметра dog есть параметры name.\r",
							"\r",
							"pm.test(\"parameter dog have age\", function(){\r",
							"    pm.expect(fam.pets.dog).to.have.any.keys(\"age\");\r",
							"});\r",
							"//Проверить, что у параметра dog есть параметры age.\r",
							"\r",
							"pm.test(\"Dog name request = Luky\", function(){\r",
							"    pm.expect(fam.pets.dog.name).to.eql(\"Luky\");\r",
							"});\r",
							"//проверяем,что параметр name имеет значение Lucky\r",
							"\r",
							"pm.test(\"Dog age request = 4\"),function(){\r",
							"    pm.expect(fam.pets.dog.age).to.eql(4);\r",
							"};\r",
							"//проверяем, что параметр age равен 4"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Dan&age=30&salary=700",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Dan"
						},
						{
							"key": "age",
							"value": "30"
						},
						{
							"key": "salary",
							"value": "700"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status = 200\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//Статус код 200\r",
							"\r",
							"let res = pm.response.json();\r",
							"console.log(\"response =\",res);\r",
							"//парсим респонс и проверяем в консоли\r",
							"\r",
							"let req = pm.request.url.query.toObject();\r",
							"console.log(\"request =\",req);\r",
							"//парсим реквест и проверяем в консоли\r",
							"\r",
							"pm.test(\"name response = name request\",function(){\r",
							"    pm.expect(res.name).to.eql(req.name);\r",
							"});\r",
							"//проверяем значение ключа name в response и request\r",
							"\r",
							"let age = +req.age\r",
							"\r",
							"pm.test(\"age response = age request\",function(){\r",
							"    pm.expect(res.age).to.eql(age);\r",
							"});\r",
							"//переводим age из str в int и сверяем значение в response и request\r",
							"\r",
							"console.log(\"salary request =\",req.salary);\r",
							"//выводим в консоль salary из request\r",
							"\r",
							"console.log(\"salary response =\",res.salary);\r",
							"//выводим в консоль salary из response\r",
							"\r",
							"let sal = res.salary;\r",
							"\r",
							"console.log(\"salary 1 =\",sal[0],\"type =\",typeof(sal[1]));\r",
							"//выводим в консоль первый элемент массива salary, проверяем тип значения\r",
							"\r",
							"console.log(\"salary 2 =\",sal[1],\"type =\",typeof(sal[1]));\r",
							"//выводим в консоль второй элемент массива salary,проверяем тип значения\r",
							"\r",
							"console.log(\"salary 3 =\",sal[2],\"type =\",typeof(sal[2]));\r",
							"//выводим в консоль третий элемент массива salary,проверяем тип значения\r",
							"\r",
							"let sal1 = +sal[0];\r",
							"console.log(typeof(sal1));\r",
							"let sal2 = +sal[1];\r",
							"console.log(typeof(sal2));\r",
							"let sal3 = +sal[2];\r",
							"console.log(typeof(sal3));\r",
							"//переводим значения массива из str в int\r",
							"\r",
							"let reqS = +req.salary\r",
							"\r",
							"pm.test(\"Check salary [0] = salary response\",function(){\r",
							"    pm.expect(sal1).to.have.eql(reqS);\r",
							"});\r",
							"//сравниваем первое значение массива salary со значением ключа salary в response\r",
							"\r",
							"pm.test(\"Salary [1] = salary*2\", function(){\r",
							"    pm.expect(sal2).to.have.eql(reqS*2);\r",
							"});\r",
							"//сравниваем второе значение массива со значением ключа salary в response, умноженным на 2\r",
							"\r",
							"pm.test(\"Salary [2} =salary*3\",function(){\r",
							"    pm.expect(sal3).to.have.eql(reqS*3);\r",
							"});\r",
							"//сравниваем третье значение массива со значением ключа salary в response, умноженным на 3\r",
							"\r",
							"pm.environment.set(\"name\", \"Dan\");\r",
							"//создаем переменную name в окружении HW_postman_2\r",
							"\r",
							"pm.environment.set(\"age\", 30);\r",
							"//создаем переменную age в окружении HW_postman_2\r",
							"\r",
							"pm.environment.set(\"salary\", 700);\r",
							"//создаем переменную salary в окружении HW_postman_2\r",
							"\r",
							"let salary = res.salary;\r",
							"\r",
							"for (let n=0; n < salary.length; n++)\r",
							"{\r",
							"    console.log(salary[n])\r",
							"};\r",
							"//пишем цикл, который выводит по порядку элементы массива salary "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Dan&age=30&salary=700",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Dan"
						},
						{
							"key": "age",
							"value": "30"
						},
						{
							"key": "salary",
							"value": "700"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status 200\",function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//Проверяем статус код 200\r",
							"\r",
							"let res = pm.response.json();\r",
							"\r",
							"console.log(\"response = \",res);\r",
							"\r",
							"let req = request.data;\r",
							"\r",
							"console.log(\"request = \",req);\r",
							"\r",
							"pm.test(\"Check json response have start_qa_salary\",function(){\r",
							"    pm.expect(res).to.have.any.keys(\"start_qa_salary\");\r",
							"});\r",
							"//проверяем есть ли ключ start_qa_salary\r",
							"\r",
							"pm.test(\"Check json response have qa_salary_after_1.5_year\",function(){\r",
							"    pm.expect(res).to.have.any.keys([\"qa_salary_after_1.5_year\"]);\r",
							"});\r",
							"//Проверяем есть ли ключ qa salary 1*5\r",
							"\r",
							"pm.test(\"Check json response have qa_salary_after_6_month\", function(){\r",
							"    pm.expect(res).to.have.any.keys(\"qa_salary_after_6_months\")\r",
							"});\r",
							"//Проверяем есть ли ключ qa salary 0.5\r",
							"\r",
							"pm.test(\"Check json response have qa_salary_after_12_months\",function(){\r",
							"    pm.expect(res).to.have.any.keys(\"qa_salary_after_12_months\");\r",
							"});\r",
							"//Проверяем есть ли ключ qa_salary_after_12_months\r",
							"\r",
							"pm.test(\"Check json response have qa_salary_after_3.5_years\",function(){\r",
							"    pm.expect(res).to.have.any.keys([\"qa_salary_after_3.5_years\"]);\r",
							"});\r",
							"//Проверяем есть ли ключ qa_salary_after_3.5_years\r",
							"\r",
							"pm.test(\"Check json response person\",function(){\r",
							"    pm.expect(res).to.have.any.keys(\"person\");\r",
							"});\r",
							"//Проверяем есть ли ключ person\r",
							"\r",
							"let rSal = +req.salary\r",
							"\r",
							"pm.test(\"start salary response = start salary reqest\",function(){\r",
							"    pm.expect(res.start_qa_salary).to.have.eql(rSal);\r",
							"});\r",
							"//Проверяем равно ли значение salary в reuqest и response\r",
							"\r",
							"pm.test(\"qa_salary_after_6_months = salary*2\",function(){\r",
							"    pm.expect(res.qa_salary_after_6_months).to.have.eql(rSal*2);\r",
							"});\r",
							"//Проверяем равно ли значение qa_salary_after_6_months salary*2\r",
							"\r",
							"pm.test(\"qa_salary_after_12_months = salary*2.7\",function(){\r",
							"    pm.expect(res.qa_salary_after_12_months).to.have.eql(rSal*2.7);\r",
							"})\r",
							"//Проверяем равно ли значение qa_salary_after_12_months salary*2.7\r",
							"\r",
							"pm.test(\"qa_salary_after_1.5_year = salary*3.5\",function(){\r",
							"    pm.expect(res[\"qa_salary_after_1.5_year\"]).to.have.eql(rSal*3.3);\r",
							"});\r",
							"//Проверяем верно ли утверждение qa_salary_after_1.5_year = salary*3.5\r",
							"\r",
							"pm.test(\"qa_salary_after_3.5_years = salary*3.8\",function(){\r",
							"    pm.expect(res[\"qa_salary_after_3.5_years\"]).to.have.eql(rSal*3.8);\r",
							"});\r",
							"//Проверяем верно ли утверждение qa_salary_after_3.5_years = salary*3.8\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						},
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}